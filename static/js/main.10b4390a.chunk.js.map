{"version":3,"sources":["pages/Create.jsx","components/NotesCard.jsx","pages/Notes.jsx","components/Layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","field","marginBottom","marginTop","Create","props","useState","title","SetTitle","details","SetDetails","category","SetCategory","history","useHistory","classes","Container","Typography","variant","gutterBottom","color","autoComplete","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","push","TextField","onChange","target","value","fullWidth","label","required","className","multiline","rows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Button","type","disableElevation","endIcon","theme","note","avatar","background","yellow","pink","green","blue","NotesCard","handleDelete","Card","elevation","CardHeader","action","IconButton","onClick","id","DeleteOutlined","Avatar","toUpperCase","subheader","CardContent","Notes","notes","Setnotes","useEffect","res","json","data","a","newNotes","filter","Grid","container","spacing","map","v","item","xs","sm","md","page","width","drawer","drawerPaper","root","display","active","padding","appbar","toolbarHeight","mixins","toolbar","date","flexGrow","marginLeft","Layout","children","location","useLocation","menuItem","text","icon","SubjectOutlined","path","AddCircleOutlined","AppBar","Toolbar","format","Date","src","Drawer","anchor","paper","List","ListItem","button","pathname","ListItemIcon","ListItemText","createTheme","palette","secondary","purple","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","App","ThemeProvider","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10b4390a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Button,\r\n    Container,\r\n    makeStyles,\r\n    RadioGroup,\r\n    TextField,\r\n    Typography,\r\n    FormControlLabel,\r\n    Radio,\r\n    FormControl,\r\n    FormLabel,\r\n\r\n} from '@material-ui/core';\r\n\r\n\r\n\r\nimport KeyboardArrowRightOutlinedIcon from '@material-ui/icons/KeyboardArrowRightOutlined';\r\nimport { useHistory } from 'react-router-dom';\r\nconst useStyles=makeStyles({\r\n    field:{\r\n    \r\n        marginBottom:20,\r\n        marginTop:20,\r\n    }\r\n    \r\n    \r\n    })\r\nfunction Create(props) {\r\n\r\n    const [title,SetTitle]=useState(null);\r\n    const [details,SetDetails]=useState(null);\r\n    const [category,SetCategory]=useState('todos');\r\n    const history=useHistory();\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(title && details &&category){\r\n            fetch('http://localhost:8000/notes',{\r\n             method:'POST',\r\n             headers:{\"Content-Type\":\"application/json\"},\r\n             body:JSON.stringify({title,details,category})\r\n\r\n\r\n            })\r\n            .then(()=>{\r\n                 history.push('/');\r\n            })\r\n        }\r\n    }\r\n    const classes=useStyles();\r\n    return (\r\n        <Container>\r\n            <Typography\r\n               variant=\"h3\"\r\n               \r\n              gutterBottom={true}\r\n               color=\"textSecondary\"\r\n               \r\n            >\r\n            Create A New Note\r\n            </Typography>\r\n            <form  autoComplete=\"off\" onSubmit={handleSubmit}>\r\n            <TextField  \r\n            onChange={(e)=>SetTitle(e.target.value)}\r\n            fullWidth\r\n             variant='outlined'\r\n             label='Note Title'\r\n             required\r\n             className={classes.field}\r\n            />\r\n            <TextField  \r\n            onChange={(e)=>SetDetails(e.target.value)}\r\n            fullWidth\r\n             variant='outlined'\r\n             label='Details'\r\n             required\r\n             className={classes.field}\r\n             multiline\r\n             rows={4}\r\n            />\r\n            <FormControl className={classes.field}>\r\n            <FormLabel> Notes Category</FormLabel>\r\n           <RadioGroup value={category} onChange={(e)=>SetCategory(e.target.value)}>\r\n              <FormControlLabel  value=\"todos\" control={<Radio/>} label=\"Todos\"/>\r\n              <FormControlLabel  value=\"Work\" control={<Radio/>} label=\"Work\"/>\r\n              <FormControlLabel  value=\"Money\" control={<Radio/>} label=\"Money\"/>\r\n              <FormControlLabel  value=\"Reminders\" control={<Radio/>} label=\"Reminders\"/>\r\n              \r\n           </RadioGroup>\r\n           <Button \r\n            type=\"submit\"\r\n            variant= \"contained\"\r\n            disableElevation\r\n            color=\"secondary\"\r\n            endIcon={<KeyboardArrowRightOutlinedIcon/>}\r\n            >\r\n            Submit\r\n            </Button>\r\n           </FormControl>\r\n            \r\n            \r\n\r\n\r\n            </form>\r\n            \r\n            </Container>\r\n    );\r\n}\r\n\r\nexport default Create;","import \r\n{    Card,\r\n     CardHeader,\r\n     IconButton,\r\n     Typography,\r\n     CardContent,\r\n     makeStyles,\r\n     Avatar\r\n } from '@material-ui/core';\r\nimport { DeleteOutlined } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport {\r\nyellow,\r\npink,\r\nblue,\r\ngreen\r\n\r\n}from '@material-ui/core/colors'\r\n\r\nconst useStyles=makeStyles((theme,note)=>({\r\n    avatar:{\r\n        background:(note)=>{\r\n\r\n        if(note.category==='work'){\r\n           return yellow[500]\r\n\r\n        }\r\n        if(note.category==='reminders'){\r\n            return pink[500];\r\n            \r\n        }\r\n        if(note.category==='todos'){\r\n\r\n            return green[500]; \r\n        }\r\n        return blue[500];\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n}))\r\nfunction NotesCard({note,handleDelete}) {\r\n\r\nconst classes=useStyles(note);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card elevation={4}>\r\n                <CardHeader\r\n                action={\r\n                    <IconButton onClick={()=>handleDelete(note.id)}>\r\n                      <DeleteOutlined/>\r\n                    </IconButton>\r\n                  }\r\n                  avatar={\r\n\r\n                    <Avatar className={classes.avatar}>\r\n                      {note.category[0].toUpperCase()}\r\n                    </Avatar>\r\n                  }\r\n                title={note.title}\r\n                subheader={note.category}\r\n                \r\n                \r\n                />\r\n                <CardContent>\r\n                    <Typography variant=\"body2\">\r\n                       {note.details}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotesCard;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n\r\n    Grid,\r\n    Paper,\r\n    Container\r\n\r\n} from '@material-ui/core';\r\nimport NotesCard from '../components/NotesCard';\r\n\r\nfunction Notes(props) {\r\n    const [notes,Setnotes]=useState([]);\r\n    useEffect(()=>{\r\n        fetch('http://localhost:8000/notes')\r\n        .then(res=>res.json())\r\n        .then(data=>Setnotes(data));\r\n\r\n    },[])\r\n    const handleDelete=async (id)=>{\r\n       await fetch('http://localhost:8000/notes/'+id,{\r\n           method:'DELETE'\r\n       })\r\n       const newNotes=notes.filter(note=>note.id !==id);\r\n       Setnotes(newNotes);\r\n\r\n\r\n\r\n    }\r\n    return (\r\n            <Container>\r\n            <Grid container spacing={3}>\r\n            {notes.map(v=>(\r\n                <Grid  item  key={v.id}  xs={12} sm={6} md={3}>\r\n                <NotesCard note={v} handleDelete={handleDelete}/>\r\n                {/* <Paper>\r\n                {v.title}::::{v.details}\r\n                </Paper> */}\r\n                </Grid>\r\n\r\n            ))}\r\n            </Grid>\r\n            </Container>\r\n        \r\n    );\r\n}\r\n\r\nexport default Notes;","import {\r\n     makeStyles,\r\n     Drawer,\r\n     Typography,\r\n     List,\r\n     ListItem,\r\n     ListItemIcon,\r\n     ListItemText,\r\n     AppBar,\r\n     Toolbar,\r\n     Avatar,\r\n\r\n\r\n\r\n} from '@material-ui/core';\r\nimport { AddCircleOutlined, SubjectOutlined } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { useHistory,useLocation } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nconst useStyles=makeStyles((theme)=>({\r\n   page:{\r\n     background:'#f9f9f9',\r\n     width:'100%',\r\n     marginTop:20\r\n   },\r\n   drawer:{\r\n       width:240\r\n   },\r\n   drawerPaper:{\r\n    width:240\r\n},\r\nroot:{\r\n    display:'flex'\r\n},\r\nactive:{\r\n    background:'#f4f4f4'\r\n},\r\ntitle:{\r\n    padding:theme.spacing(2)\r\n},\r\nappbar:{\r\n    width:'calc(100% - 240px)',\r\n    background:'#ed2fc1'\r\n},\r\ntoolbarHeight:theme.mixins.toolbar,\r\ndate:{\r\n    flexGrow:1\r\n},\r\navatar:{\r\n    marginLeft:theme.spacing(2)\r\n}\r\n\r\n}))\r\nfunction Layout({children}) {\r\n    const classes=useStyles();\r\n    const history=useHistory();\r\n    const location=useLocation();\r\n\r\n\r\n    const menuItem=[\r\n     {\r\n         text:'mynotes',\r\n         icon:<SubjectOutlined color=\"secondary\"/>,\r\n         path:'/'\r\n     },\r\n     {\r\n        text:'Createnotes',\r\n        icon:<AddCircleOutlined color=\"secondary\"/>,\r\n        path:'/create'\r\n    },\r\n    \r\n\r\n    ];\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* APP BAR */}\r\n             <AppBar className={classes.appbar}>\r\n                 <Toolbar >\r\n                     <Typography className={classes.date}>\r\n                         {format(new Date(), 'do MMMM Y')}\r\n                     </Typography>\r\n                     <Typography>\r\n                         Pikachu\r\n                     </Typography>\r\n                     <Avatar  src=\" https://api.pexels.com/v1/photos/2345\" className={classes.avatar}/>\r\n\r\n                     \r\n                 </Toolbar>\r\n\r\n\r\n             </AppBar>\r\n\r\n\r\n\r\n            {/* DRAWER */}\r\n            <Drawer \r\n             className={classes.drawer}\r\n            variant=\"permanent\"\r\n            anchor=\"left\"\r\n            classes={{paper:classes.drawerPaper}}\r\n            >\r\n                <div className={classes.title}>\r\n                    <Typography variant=\"h4\">\r\n                        NOTES APP\r\n                    </Typography>\r\n                </div>\r\n                {/* LIST ITEMS */}\r\n                <List>\r\n                    {menuItem.map(item=>(\r\n\r\n                        <ListItem   \r\n                         button\r\n                         onClick={()=>history.push(item.path)}\r\n                         className={location.pathname===item.path?classes.active:null}\r\n                        >\r\n                            <ListItemIcon>\r\n                            {item.icon}\r\n                            </ListItemIcon>\r\n                            <ListItemText>\r\n                            {item.text}\r\n                            </ListItemText>\r\n                        </ListItem>\r\n\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n            <div className={classes.page}>\r\n                 <div className={classes.toolbarHeight}>\r\n                        \r\n                  </div>\r\n                  {children} \r\n            \r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Layout;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport {createTheme,ThemeProvider} from '@material-ui/core';\n\nimport Create from \"./pages/Create\";\nimport Notes from \"./pages/Notes\";\nimport { purple } from \"@material-ui/core/colors\";\nimport Layout from \"./components/Layout\";\n\nconst theme=createTheme({\npalette:{\n  \n  secondary:purple,\n  \n},\ntypography:{\n\n  fontFamily:'Quicksand',\n  fontWeightLight:400,\n  fontWeightRegular:500,\n  fontWeightMedium:600,\n  fontWeightBold:700,\n\n}\n\n\n\n\n})\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n    <Router>\n    <Layout>\n      <Switch>\n        \n        <Route exact path='/'>\n           <Notes/>\n        </Route>\n        <Route path='/create'>\n           <Create/>\n        </Route>\n      </Switch>\n      </Layout>\n    </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}